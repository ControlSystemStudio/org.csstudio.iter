<?xml version="1.0"?>

<!-- Ant file for building from the command line

     Not really a complete build file, just a start at replacing
     shell scripts with Ant

     Needs Environment Variables:
     
     TOP
     BUILDDIR
     WORKSPACE
     VERSION
     
     Kay Kasemir
  -->
<project name="sns_css" default="all">
    <!-- Map all environment variables XYZ to ${env.XYZ} -->
    <property environment="env"/>

    <!-- Repository dir where sources have been checked out -->
    <property name="repo_dir" value="${env.TOP}" />

	<!-- Workspace from which sources are copied that are not in repo -->
    <property name="workspace_dir" value="${env.WORKSPACE}" />
    
    <!-- Build directory -->
    <property name="build_dir" value="${env.BUILDDIR}" />
	
    <!-- Zip all the source files -->
    <target name="check_vars" unless="env.VERSION">
        <fail message="VERSION is undefined"/>
    </target>
 	
    <!-- Remove all that might have been built previously -->
    <target name="clean">
        <delete dir="${build_dir}" />
        <delete>
            <fileset dir="." includes="*/*.log"/>
        </delete>
    </target>

	
    <!-- Create build directory structure -->
    <target name="prepare">
        <mkdir dir="${build_dir}/plugins" />
        <mkdir dir="${build_dir}/features" />
    </target>


    <!-- Gather all the source files for building -->
    <target name="get_sources" depends="prepare">
    	<!-- Plugins
    	
    	     Uses one list of plugins, but applies them to the various
    	     directories that hold the sources, copying them all into
    	     one flat 'todir'.
    	     
             With 'overwrite' it seems much faster in case we really need
             to copy.
             If there's nothing to copy, it would have been faster without
             overwrite, i.e. check what needs to be done and then do nothing
         -->
    	<echo>Core plugins</echo>
        <copy todir="${build_dir}/plugins" overwrite="true">
             <fileset dir="${repo_dir}/core/plugins" includesfile="plugins.list">
                 <exclude name="**/bin/**"/>
                 <exclude name="**/classes/**"/>
            </fileset>
        </copy>

    	<echo>Application plugins</echo>
        <copy todir="${build_dir}/plugins" overwrite="true">
             <fileset dir="${repo_dir}/applications/plugins" includesfile="plugins.list">
                 <exclude name="**/bin/**"/>
                 <exclude name="**/classes/**"/>
            </fileset>
        </copy>

    	<echo>SNS plugins</echo>
        <copy todir="${build_dir}/plugins" overwrite="true">
             <fileset dir="${repo_dir}/products/SNS/plugins" includesfile="plugins.list">
                 <exclude name="**/bin/**"/>
                 <exclude name="**/classes/**"/>
            </fileset>
        </copy>

    	<echo>KEK plugins</echo>
        <copy todir="${build_dir}/plugins" overwrite="true">
             <fileset dir="${repo_dir}/products/KEK/plugins" includesfile="plugins.list">
                 <exclude name="**/bin/**"/>
                 <exclude name="**/classes/**"/>
            </fileset>
        </copy>
        
        <!-- Features -->
        <echo>KEK Features</echo>
        <copy todir="${build_dir}/features" overwrite="true">
             <fileset dir="${repo_dir}/products/KEK/features" includesfile="features.list">
                <exclude name="**/bin/**"/>
                <exclude name="**/classes/**"/>
            </fileset>
        </copy>
    	<echo>Core Features</echo>
        <copy todir="${build_dir}/features" overwrite="true">
            <fileset dir="${repo_dir}/applications/features" includesfile="features.list">
                 <exclude name="**/bin/**"/>
                 <exclude name="**/classes/**"/>
            </fileset>
        </copy>
    </target>

    <!-- Zip all the source files 
         Use build dir, but don't include the  local.list
    -->
    <target name="zip_sources" depends="check_vars">
        <zip destfile="apps/sns_css_src_${env.VERSION}.zip">
            <fileset dir="${repo_dir}/core/plugins" includesfile="plugins.list">
                <exclude name="**/bin/**"/>
                <exclude name="**/classes/**"/>
            </fileset>
            <fileset dir="${repo_dir}/applications/plugins" includesfile="plugins.list">
                <exclude name="**/bin/**"/>
                <exclude name="**/classes/**"/>
            </fileset>
            <fileset dir="${repo_dir}/products/SNS/plugins" includesfile="plugins.list">
                <exclude name="**/bin/**"/>
                <exclude name="**/classes/**"/>
            </fileset>
            <fileset dir="${repo_dir}/products/SNS/product" includesfile="plugins.list">
                <exclude name="**/bin/**"/>
                <exclude name="**/classes/**"/>
            </fileset>
            <fileset dir="${repo_dir}/products/SNS/product" includesfile="features.list">
               <exclude name="**/bin/**"/>
               <exclude name="**/classes/**"/>
            </fileset>
            <fileset dir="${repo_dir}/applications/features" includesfile="features.list">
               <exclude name="**/bin/**"/>
               <exclude name="**/classes/**"/>
            </fileset>
        </zip>
    </target>


    <!-- Ideally, ant could drive the whole build, but it doesn't -->
    <target name="all">
        <echo>=== Complete ${name} rebuild - was not done by this ===</echo>
        <echo>See make.sh and config_*/build.sh</echo>
    </target>
</project>
